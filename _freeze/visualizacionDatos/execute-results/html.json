{
  "hash": "ef9bcfed2a6d1756a2af3c2562fcabd4",
  "result": {
    "engine": "knitr",
    "markdown": "# Visualización de los Datos\n\nAhora que ya hemos analizado en profundidad cada atributo de nuestro DataSet, vamos a necesitar algunos gráficos que nos den ideas sobre como continuar nuestro análisis.\n\nPara ello vamos a utilizar al herramienta de `ggplot2` , la cual nos va a permitir realizar los gráficos complejos de los que estamos hablando.\n\nggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics\n\n:   A system for 'declaratively' creating graphics, based on \"The Grammar of Graphics\". You provide the data, tell 'ggplot2' how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.\n\n[Enlace a la librería](https://ggplot2.tidyverse.org/)\n\nVamos a comenzar importando la librería y cargando nuestros datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(readr) \nlibrary(magrittr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\ndatos <- read_csv(\"Data/train.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 576 Columns: 12\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (12): profile pic, nums/length username, fullname words, nums/length ful...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Pre-procesado\n\nPara poder hacer este trabajo mas fácil, vamos a realizar un pre-procesado de los datos primero. Vamos a convertir todos los atributos que son discretos a factores:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_refinados <- datos\ncolumnas_binarias = c(\"profile pic\",\"name==username\",\"external URL\",\"fake\",\"private\")\nfor (columna in columnas_binarias) {\n  datos_refinados[[columna]] <-  factor(datos_refinados[[columna]], labels = c(\"No\", \"Si\"))\n}\n```\n:::\n\n\nNuestro atributos discretos, son binarios, solo tienen o bien *Si* o *No.* Vamos a emplear ahora los gráficos para poder encontrar alguna relación entre las variables y sobre todo, lo que mas no interesa, si alguna tiene relación con las cuentas de spam.\n\n## Comparación de la cantidad de publicaciones entre cuentas privadas y públicas\n\nPara ver como se comportan ambos tipos de usuarios, vamos a empezar analizando el numero de publicaciones entre los usuarios con cuentas publicas y con cuentas privadas, para ello vamos ver las densidades utilizando `geom_density` :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nposts_filtrados <- datos_refinados %>%  filter(`#posts` <100)\n\nggplot(data = posts_filtrados, aes( x = `#posts`,fill = private)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Comparación de publicaciones entre cuentas privadas y públicas\",\n       x = \"Numero de publicacion\",\n       y = \"Densidad\") +\n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"))\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nVemos que ambos casos, nuestra gráfica se asemeja, por lo que el numero de publicaciones no depende de si es privada o publica.\n\nSin embargo, realmente a nosotros nos interese encontrar relaciones para intentar determinar si una cuenta es spammer o de un persona real. Por lo tanto vamos a centrarnos en comparar los atributos con el atributos spam.\n\n## Relación entre visibilidad del perfil y cuentas fake\n\nComo nos interesa buscar las cuentas de spam, vamos a ver si la visibilidad del perfil (cuenta privada o publica), tiene algo que ver:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(datos_refinados, aes(x = `fake`, y = `private`)) +   \n  geom_count(color = \"blue\", alpha = 0.6) +   \n  scale_size_area()+   \n  labs(title = \"Relación entre visibilidad del perfil y si es spam\",        \n       x = \"Cuenta fake\",        \n       y = \"Cuenta privada\")+   \n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nUtilizando `geom_count` con dos variables discretas, en este caso si un perfil es privado o no y si un perfil es fake o no, no podemos extraer mucha información relevante ya que vemos que hay aproximadamente un numero similar de cada combinación.\n\n## Relación entre tener foto de perfil y ser cuenta fake\n\nAl igual que antes vamos a comprobar dos variables discretas, por lo que el aspecto del gráfico sera diferente. Vamos a comprobar si tener o no foto de perfil tiene algo de relación con ser un spammer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(datos_refinados, aes(x = `fake`, y = `profile pic`)) +   \n  geom_jitter(color = \"blue\", alpha = 0.6) +   \n  scale_size_area()+   \n  labs(title = \"Relación entre tener foto de perfil y si es spam\",        \n       x = \"Cuenta fake\",        \n       y = \"Foto de perfil\")+   \n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nHemos obtenido un resultado interesante, donde vemos que las cuentas reales, todas menos 2 tienen foto de perfil puesta, mientras que las cuentas fake hay mas o menos un mismo numero con foto de perfil y sin foto de perfil. Estos datos, combinados con otros que vamos a obtener mas adelante, nos pueden ayudar a diferenciar cuentas reales de falsas.\n\n## Relación entre numero de publicaciones y cuentas fake\n\nPodemos suponer una posible hipótesis en la que los usuarios spammers, cuya tarea puede ser solo generar comentarios o likes, van a tener cuentas con menos numero de publicaciones que una cuenta de una persona verdadera. Vamos a visualizar esta idea:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nposts_filtrados <- datos_refinados %>%  filter(`#posts` <100)\nggplot(posts_filtrados, aes(x = fake, y = `#posts`)) +\n  geom_violin(fill = \"skyblue\", color = \"black\") \n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nObservamos que teníamos razón, despues de eliminar aquellas cuentas con muchos post, vemos que las cuentas falsas suelen tener un numero reducido de publicaciones, mientras que las cuentas normales suelen tener una distribución mas uniforme.\n\n## Análisis de numero de seguidores\n\nUnos de los atributos mas relevantes pueden ser el numero de seguidores el numero de seguidos, por lo quenecesitamos analizarlos en profundidad. Vamos a comenzar con el numero de seguidores.\n\nPrimero, como en el análisis exploratorio observamos que había algunas cuentas con muchos seguidores pero que no representaban un numero importante, vamos a eliminar esas escasas cuentas con un numero alto de seguidores con el fin de que los gráficos sean mas entendibles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollowers_filtrados <- datos_refinados %>% filter(`#followers` <1500)\n\nggplot(followers_filtrados, aes(x = `#followers`)) +\n  geom_histogram(binwidth = 10, color = 'black') +\n    labs(title = \"Histograma de seguidores\",\n       x = \"Cantidad de Seguidores\",\n       y = \"Frecuencias\")\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nVemos que se concentra la mayoría en menos de 250 seguidores.\n\nVamos a utilizar una gráfica de frecuencia para ver como son nuestros datos con menos de 250 seguidores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollowers_filtrados <- datos_refinados %>%  filter(`#followers` <250)\n\nggplot(followers_filtrados, aes(x = `#followers`)) +\n  geom_freqpoly(color = \"blue\", binwidth = 5) +\n  labs(title = \"Distribución de la Cantidad de Seguidores\",\n       x = \"Cantidad de Seguidores\",\n       y = \"Frecuencia\") \n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nLa mayor concentración se encuentra en menos de 100 seguidores y que es decreciente la frecuencia a medida que aumenta el numero de seguidores.\n\n### Comparación del numero de seguidores entre cuentas reales y falsas\n\nComo nuestro principal objetivo es poder encontrar características similares que tengan las cuentas falsas para poder encontrarlas fácilmente, vamos a visualizar este atributo en relación con el numero de seguidores. Ademas añadimos las medias para obtener mas información.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_values <- followers_filtrados %>% \n  group_by(fake) %>% \n  summarize(mean_followerss = mean(`#followers`))\n\nggplot(data = followers_filtrados, aes( x = `#followers`,fill = `fake`)) +   geom_density(alpha = 0.5) +   \n  labs(title = \"Comparación de seguidores entre cuentas reales y falsas\",        \n       x = \"Numero de seguidores\",        \n       y = \"Densidad\") +   \n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"))+\n  geom_vline(data = mean_values, aes(xintercept = mean_followerss, color = fake), linetype = \"dashed\", size = 1) +\n   geom_text(data = mean_values, aes(x = mean_followerss, y = 0, label = round(mean_followerss, 1), color = fake),\n            vjust = -0.5, hjust = -0.1, size = 4, fontface = \"bold\") +\n  scale_color_manual(values = c(\"lightgreen\", \"lightcoral\"), name = \"Media\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAquí y obtenemos información mas interesante. Podemos observar que las cuentas falsas tienen a tener un menor numero de seguidores, mientras que las cuentas reales, aunque no tienen muchos seguidores, se suelen mantener en un intervalo entre 50 y 250. Esta información nos puede ser de importancia para los cálculos futuros.\n\n## Análisis de numero de seguidos\n\nAhora que hemos ya explorados gracias a varios gráficos como se comporta el numero de seguidores segun el tipo de cuentas, vamos a continuar ahora con el numero de seguidos.\n\nPrimero, como en el análisis exploratorio observamos que había algunas cuentas con muchos seguidos, pero que no representaban un numero importante, vamos a eliminar esas escasas cuentas con un numero alto de seguidos con el fin de que los gráficos sean mas entendibles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollows_filtrados <- datos_refinados %>%  filter(`#follows` <1000)  \nggplot(follows_filtrados, aes(x = `#follows`)) +   geom_histogram(binwidth = 10, color = 'black') +     \n  labs(title = \"Histograma de seguidos\",        \n       x = \"Cantidad de Seguidos\",        \n       y = \"Frecuencias\")\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nVemos que se concentra la mayoría en menos de 250 seguidos.\n\nVamos a utilizar una gráfica de frecuencia para ver como son nuestros datos con menos de 250 seguidos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollows_filtrados <- datos_refinados %>%  filter(`#follows` <250)   \nggplot(follows_filtrados, aes(x = `#follows`)) +   \n  geom_freqpoly(color = \"blue\", binwidth = 5) +   \n  labs(title = \"Distribución de la Cantidad de Seguidos\",        \n       x = \"Cantidad de Seguidos\",        \n       y = \"Frecuencia\")  \n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nLa mayor concentración se encuentra en menos de 100 seguidos y que es decreciente la frecuencia a medida que aumenta el numero de seguidores.\n\n### Comparación del numero de seguidos entre cuentas reales y falsas\n\nComo nuestro principal objetivo es poder encontrar características similares que tengan las cuentas falsas para poder encontrarlas fácilmente, vamos a visualizar este atributo. Ademas añadimos las medias para obtener mas información.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollows_filtrados <- datos_refinados %>%  filter(`#follows` <550)  \n\nmean_values <- follows_filtrados %>% \n  group_by(fake) %>% \n  summarize(mean_follows = mean(`#follows`))\n\nggplot(data = follows_filtrados, aes( x = `#follows`,fill = `fake`)) +   geom_density(alpha = 0.5) +   \n  labs(title = \"Comparación de seguidos entre cuentas reales y falsas\",        \n       x = \"Numero de seguidos\",        \n       y = \"Densidad\") +   \n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"))+\n  geom_vline(data = mean_values, aes(xintercept = mean_follows, color = fake), linetype = \"dashed\", size = 1) +\n   geom_text(data = mean_values, aes(x = mean_follows, y = 0, label = round(mean_follows, 1), color = fake),\n            vjust = -0.5, hjust = -0.1, size = 4, fontface = \"bold\") +\n  scale_color_manual(values = c(\"lightgreen\", \"lightcoral\"), name = \"Media\")\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nAquí, al igual que con lo seguidores, obtenemos información mas interesante. Podemos observar que las cuentas falsas tienen a tener un menor numero de seguidores, pero no tan cercano al 0, mientras que las cuentas reales, suelen tener un numero mas repartido de seguidos. Esta información nos puede ser de importancia para los cálculos futuros.\n\n## Relación entre numero de seguidores y numero de seguidos\n\nAhora que la hemos visto ambas variables por separado, vamos a utilizar los gráficos de puntos o dispersión para ver varias variables juntas para intentar ver alguna relación o característica en estas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollowers_filtrados <- datos_refinados %>%  filter(`#followers` <5000)\n\n\nggplot(data = followers_filtrados, aes(x = `#follows`, y = `#followers`)) +\n  geom_point(shape = 4, size = 3) +\n  labs(title = \"Seguidores vs. Seguidos\",\n       x = \"Cantidad de Seguidos\",\n       y = \"Cantidad de Seguidores\")+\n  scale_fill_manual(values = c(\"skyblue\", \"lightcoral\"))\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nViendo este gráfico solo podemos obtener que casi todo se concentra a un numero reducido tanto de seguidos y seguidores.\n\nAunque dicha información no nos sirve de mucho, vamos a añadir el parametro para diferenciar cuentas fake y reales. Podemos pensar que los seguidores y los seguidos tienen algo de relación con los usuarios que son fake, vamos a refinar un poco el DataSet eliminando los usuarios que tenian muchos seguidores, vamos a investigar:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfollowers_filtrados <- datos_refinados %>%  filter(`#followers` <5000)\n\n\nggplot(data = followers_filtrados, aes(x = `#follows`, y = `#followers`, fill =fake)) +\n  geom_point(shape = 21, size = 3) +\n  labs(title = \"Seguidores vs. Seguidos con Relleno según 'Fake'\",\n       x = \"Cantidad de Seguidos\",\n       y = \"Cantidad de Seguidores\",\n       fill = \"Fake\") +\n  scale_fill_manual(values = c(\"skyblue\", \"lightcoral\"), labels = c(\"Real\", \"Falso\"))\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nAquí podemos ver que hay una cierta tendencia. Las cuentas fake suelen tener mas cuentas seguidas que seguidores .Esto puede ser debido a que al ser cuentas generadas automaticamente, seguir a otra cuenta es una tarea que se puede automatizar, mientras que conseguir seguidores es algo mas complicado y requiere que de una segunda persona para que le siga. Vamos a utilizar el atributo de `geom_smooth` para poder visualizar una posible tendencia\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = followers_filtrados, aes(x = `#follows`, y = `#followers`, fill = fake)) +\n  geom_point(shape = 21, size = 3) +\n   geom_smooth(method = \"loess\")+\n  labs(title = \"Seguidores vs. Seguidos con Relleno según 'Fake'\",\n       x = \"Cantidad de Seguidos\",\n       y = \"Cantidad de Seguidores\",\n       fill = \"Fake\") +\n  scale_fill_manual(values = c(\"skyblue\", \"lightcoral\") )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nAhora podemos reafirmar la idea de esa posible tendencia gracias a este gráfico. Vemos que los puntos rojos (fake) se ajustan en a la linea roja. Sin embargo las cuentas verdaderas tiene una tendencia mas dispersa.\n\n## Importancia presencia de caracteres numéricos en usuario y nombre\n\nEncontrar caracteres numéricos en nombre de usuario y nombres completos es algo que de primeras no podemos asociar a ningún tipo de cuenta, por lo tanto, nos vemos en la necesidad de analizarlo mas en profundidad\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Tenemos que duplicar los datos para poder poner una grafica al lado de otra\n#Pivot_longer elimina las columnas conbinandola en dos columnas con el nombre y el valor\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:magrittr':\n\n    extract\n```\n\n\n:::\n\n```{.r .cell-code}\ndatos_comb  <-  datos_refinados %>% \n  pivot_longer(cols = c(`nums/length fullname`, `nums/length username`), \n               names_to = \"variable\", \n               values_to = \"value\")\n\nggplot(data = datos_comb, aes(x = value, fill = fake)) +\n  geom_density(alpha = 0.5, adjust = 1) +\n  labs(title = \"Proporción de Números en fullname y username para Perfiles Reales y Falsos\",\n       x = \"Proporción de Números\",\n       y = \"Densidad\",\n       fill = \"Perfil Falso\") +\n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"), labels = c(\"No\", \"Sí\")) +  facet_wrap(~variable, scales = \"free_x\", labeller = as_labeller(c(`nums/length fullname` = \"Nombre Completo\", `nums/length username` = \"Nombre de Usuario\")))\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nPodemos ver que realmente si hay una relación entre la presencia de caracteres numéricos en el nombre y el nombre de usuario respecto a si la cuenta es verdadera o spammer.\n\nPodemos concluir que la cuentas falsas suelen contener mayor numero de caracteres numéricos en el nombre o nombre de usuario que las cuentas verdaderas.\n\n## Relación entre longitud de la descripción para perfiles reales y perfiles falsos\n\nPor ultimo, otra posible hipótesis posible puede ser pensar que los usuarios falsos, tienen descripciones vacías o menos elaboradas que las de los perfiles reales.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = datos_refinados, aes(x = `description length`, fill = fake)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Densidad de Longitud de Descripción para Perfiles Reales y Falsos\",\n       x = \"Longitud de la Descripción\",\n       y = \"Densidad\") +\n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"))\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nY podemos comprobar que dicha idea era cierta, los perfiles falsos suelen tener un numero reducido de caracteres en su descripción, mientras que los reales esta mas repartidos.\n\nVamos a visualizar las medias:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_values <- datos_refinados %>% \n  group_by(fake) %>% \n  summarize(mean_desc_length = mean(`description length`))\n\nggplot(data = datos_refinados, aes(x = `description length`, fill =fake)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Densidad de Longitud de Descripción para Perfiles Reales y Falsos\",\n       x = \"Longitud de la Descripción\",\n       y = \"Densidad\",\n       fill = \"Perfil Falso\") +\n  scale_fill_manual(values = c(\"lightgreen\", \"lightcoral\"))+\n  geom_vline(data = mean_values, aes(xintercept = mean_desc_length, color = fake), linetype = \"dashed\", size = 1) +\n  scale_color_manual(values = c(\"lightgreen\", \"lightcoral\"), name = \"Media\")\n```\n\n::: {.cell-output-display}\n![](visualizacionDatos_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Conclusiones\n\nVistos todos los gráficos anteriores, podemos sacar algunas conclusiones interesantes:\n\n1.  Las cuentas falsas tienen menor numero de seguidores y mayor seguidos.\n\n2.  Las cuentas reales tienen descripciones con longitudes mas largas.\n\n3.  Las cuentas falsas tiene mas cantidad de caracteres numéricos en el nombre completo y nombre de usuario.\n\n4.  Las cuentas reales siempre suelen tener foto de perfil.\n",
    "supporting": [
      "visualizacionDatos_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}