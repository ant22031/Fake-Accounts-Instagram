{
  "hash": "3735fc8777ce101a69c2b8e8348caed3",
  "result": {
    "engine": "knitr",
    "markdown": "# Regresión\n\nLa regresión es una técnica estadística y de machine learning utilizada para modelar y analizar relaciones entre variables. Su objetivo principal es entender cómo cambia una variable dependiente en función de una o más variables independientes. La regresión puede ser utilizada tanto para predecir valores futuros como para entender relaciones subyacentes en los datos.\n\nEn el contexto de la detección de cuentas falsas de Instagram, la regresión es una herramienta muy útil. Entrenamos y evaluamos el modelo con conjuntos de datos de entrenamiento y prueba, utilizando métricas para asegurar su efectividad. Gracias a que tenemos dos DataSets, *train* y *test,* podemos probar nuestro modelo con datos nuevos. Finalmente, interpretamos los resultados para identificar las variables más influyentes y ajustamos el modelo para mejorar su precisión, intentando crear una herramienta fiable de detección de cuentas falsas.\n\nAhora vamos a comenzar con\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr) \ndatos <- read_csv(\"Data/train.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 576 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (12): profile pic, nums/length username, fullname words, nums/length ful...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndatosTest <- read_csv(\"Data/test.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 120 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (12): profile pic, nums/length username, fullname words, nums/length ful...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nattach(datos)\n```\n:::\n\n\n\\\nAntes de intentar modelo de regresión, se debe explorar cuales son las correlaciones entre las variables numéricas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(datos[c(\"nums/length username\",\"fullname words\",\"description length\",\"#posts\",\"#followers\",\"#follows\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     nums/length username fullname words description length\nnums/length username           1.00000000    -0.22547213       -0.321170271\nfullname words                -0.22547213     1.00000000        0.272522165\ndescription length            -0.32117027     0.27252216        1.000000000\n#posts                        -0.15744211     0.07335018        0.144823702\n#followers                    -0.06278509     0.03322460        0.005929455\n#follows                      -0.17241327     0.09485496        0.226561422\n                          #posts   #followers    #follows\nnums/length username -0.15744211 -0.062785090 -0.17241327\nfullname words        0.07335018  0.033224604  0.09485496\ndescription length    0.14482370  0.005929455  0.22656142\n#posts                1.00000000  0.321385480  0.09822504\n#followers            0.32138548  1.000000000 -0.01106599\n#follows              0.09822504 -0.011065994  1.00000000\n```\n\n\n:::\n:::\n\n\nVamos a ordenar las correlaciones de mayor a menor valor absoluto y destacar las más significativas\n\n1.  **description length y nums/length username**: -0.32117027\n\n2.  **#followers y #posts**: 0.32138548\n\n3.  **description length y fullname words**: 0.272522165\n\n4.  **description length y #follows**: 0.226561422\n\n5.  **nums/length username y fullname words**: -0.22547213\n\n6.  **nums/length username y #follows**: -0.17241327\n\n7.  **fullname words y description length**: 0.272522165\n\n8.  **fullname words y nums/length username**: -0.22547213\n\nEstos valores nos indican las variables que tienen más relación entre sí. Es decir, las correlaciones altas señalan que cuando una variable cambia, la otra tiende a cambiar en la misma dirección o en dirección opuesta.\n\nVamos a emplear la librería `psych` para visualizar estas correlaciones de manera más intuitiva.\n\nLa parte superior de la visualización corresponde a la matriz de correlación. La diagonal muestra histogramas y además añade óvalos indicando la fuerza de correlación. Cuanto más se estire la elipse, más fuerte será la correlación. Cuanto más redondo el óvalo, más débil la correlación.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'psych' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\npairs.panels(datos[c(\"nums/length username\",\"fullname words\",\"description length\",\"#posts\",\"#followers\",\"#follows\")])\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nCiertamente podemos ver que donde hay mayor elipse es en description length y nums/length username y en followers y #posts. Por lo tanto, las tendremos mas presenters para nuestro futuro modelo de regresion.\n\n## Construccion del modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo1 <- lm(fake ~., data = datos)\nsummary(modelo1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ ., data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.73096 -0.23729 -0.06653  0.24048  1.01052 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             7.931e-01  3.798e-02  20.880  < 2e-16 ***\n`profile pic`          -4.380e-01  3.345e-02 -13.094  < 2e-16 ***\n`nums/length username`  8.062e-01  7.522e-02  10.718  < 2e-16 ***\n`fullname words`       -3.354e-02  1.333e-02  -2.516 0.012142 *  \n`nums/length fullname` -2.775e-02  1.212e-01  -0.229 0.818988    \n`name==username`        2.241e-01  7.641e-02   2.933 0.003498 ** \n`description length`   -1.510e-03  4.342e-04  -3.478 0.000544 ***\n`external URL`         -1.542e-01  4.800e-02  -3.213 0.001390 ** \nprivate                -9.459e-03  2.843e-02  -0.333 0.739459    \n`#posts`               -9.094e-05  3.570e-05  -2.547 0.011120 *  \n`#followers`           -9.960e-09  1.539e-08  -0.647 0.517743    \n`#follows`             -1.850e-05  1.499e-05  -1.235 0.217530    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3166 on 564 degrees of freedom\nMultiple R-squared:  0.6074,\tAdjusted R-squared:  0.5998 \nF-statistic: 79.33 on 11 and 564 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(modelo1)\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n```{.r .cell-code}\n plot(density(resid(modelo1))) #A density plot\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar las librerías necesarias\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ggplot2'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:psych':\n\n    %+%, alpha\n```\n\n\n:::\n\n```{.r .cell-code}\n# Generar predicciones\nmodelo1_predic <- predict(modelo1, newdata = datosTest)\n\n# Añadir las predicciones al dataframe de prueba\ndatosTest <- datosTest %>% mutate(pred = modelo1_predic)\n\n# Graficar utilizando ggplot2\nggplot(datosTest, aes(x = pred, y = fake)) +\n  geom_point(color = \"red\") +              # Marcar los valores reales en rojo\n  geom_point(aes(x = pred, y = pred),      # Marcar los valores predichos en verde\n             color = \"green\", shape = 1) +\n  labs(title = \"Comparación de valores reales y predichos\",\n       x = \"Valores Predichos\",\n       y = \"Valores Reales\") +\n  theme_minimal()                         # Usar un tema minimalista\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nVemos que ciertamente, al usar una regresion \"lineal\", los valores se disponen en una linea recta, la que corresponde a la ecucacion obtenida gracias a `lm.`\n\nUna vez vsito que nuestro modelo inicial, con todoas las variables, no es del todo bueno, vamos a eliminar variables con p values altos e intentar mejorarlo.\n\n## Mejorando el modelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(datos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"profile pic\"          \"nums/length username\" \"fullname words\"      \n [4] \"nums/length fullname\" \"name==username\"       \"description length\"  \n [7] \"external URL\"         \"private\"              \"#posts\"              \n[10] \"#followers\"           \"#follows\"             \"fake\"                \n```\n\n\n:::\n\n```{.r .cell-code}\nmodelo1 <- lm(fake ~ `profile pic`+ `nums/length username`+`fullname words`+ `name==username`+`description length`+ `external URL`+`#posts`    , data = datos)\nsummary(modelo1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ `profile pic` + `nums/length username` + \n    `fullname words` + `name==username` + `description length` + \n    `external URL` + `#posts`, data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.74953 -0.24241 -0.05836  0.23371  1.02834 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             7.843e-01  3.577e-02  21.926  < 2e-16 ***\n`profile pic`          -4.444e-01  3.267e-02 -13.603  < 2e-16 ***\n`nums/length username`  8.084e-01  6.861e-02  11.783  < 2e-16 ***\n`fullname words`       -3.353e-02  1.326e-02  -2.528 0.011728 *  \n`name==username`        2.157e-01  7.265e-02   2.969 0.003116 ** \n`description length`   -1.553e-03  4.283e-04  -3.625 0.000315 ***\n`external URL`         -1.528e-01  4.747e-02  -3.219 0.001359 ** \n`#posts`               -9.923e-05  3.369e-05  -2.945 0.003360 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.316 on 568 degrees of freedom\nMultiple R-squared:  0.606,\tAdjusted R-squared:  0.6012 \nF-statistic: 124.8 on 7 and 568 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(datos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"profile pic\"          \"nums/length username\" \"fullname words\"      \n [4] \"nums/length fullname\" \"name==username\"       \"description length\"  \n [7] \"external URL\"         \"private\"              \"#posts\"              \n[10] \"#followers\"           \"#follows\"             \"fake\"                \n```\n\n\n:::\n\n```{.r .cell-code}\nmodelo1 <- update(modelo1, .~. +I(`name==username`^2), data=datos )\nmodelo1 <- lm(fake ~ `profile pic`+\n                `nums/length username`+\n                `fullname words`+\n                `name==username`+\n                `description length`+\n                `external URL`+`#posts`    , data = datos)\nsummary(modelo1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ `profile pic` + `nums/length username` + \n    `fullname words` + `name==username` + `description length` + \n    `external URL` + `#posts`, data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.74953 -0.24241 -0.05836  0.23371  1.02834 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             7.843e-01  3.577e-02  21.926  < 2e-16 ***\n`profile pic`          -4.444e-01  3.267e-02 -13.603  < 2e-16 ***\n`nums/length username`  8.084e-01  6.861e-02  11.783  < 2e-16 ***\n`fullname words`       -3.353e-02  1.326e-02  -2.528 0.011728 *  \n`name==username`        2.157e-01  7.265e-02   2.969 0.003116 ** \n`description length`   -1.553e-03  4.283e-04  -3.625 0.000315 ***\n`external URL`         -1.528e-01  4.747e-02  -3.219 0.001359 ** \n`#posts`               -9.923e-05  3.369e-05  -2.945 0.003360 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.316 on 568 degrees of freedom\nMultiple R-squared:  0.606,\tAdjusted R-squared:  0.6012 \nF-statistic: 124.8 on 7 and 568 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\nsave(modelo1, file = \"modelo.RData\")\ncoef(modelo1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           (Intercept)          `profile pic` `nums/length username` \n          7.842685e-01          -4.443858e-01           8.084044e-01 \n      `fullname words`       `name==username`   `description length` \n         -3.352732e-02           2.156730e-01          -1.552552e-03 \n        `external URL`               `#posts` \n         -1.528050e-01          -9.922949e-05 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo1_interactions <- lm(fake ~ `profile pic` * `nums/length username` +\n                                       `fullname words` * `description length` +\n                                       `name==username` * `external URL` +\n                                       `#posts`, data = datos)\nsummary(modelo1_interactions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ `profile pic` * `nums/length username` + \n    `fullname words` * `description length` + `name==username` * \n    `external URL` + `#posts`, data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.97323 -0.17588  0.00723  0.06358  0.99251 \n\nCoefficients:\n                                        Estimate Std. Error t value Pr(>|t|)\n(Intercept)                            1.009e+00  4.144e-02  24.355  < 2e-16\n`profile pic`                         -7.315e-01  4.273e-02 -17.118  < 2e-16\n`nums/length username`                 5.190e-02  9.902e-02   0.524  0.60041\n`fullname words`                      -4.384e-02  1.694e-02  -2.588  0.00991\n`description length`                  -1.814e-03  5.933e-04  -3.058  0.00233\n`name==username`                       2.231e-01  6.890e-02   3.237  0.00128\n`external URL`                        -1.254e-01  4.423e-02  -2.835  0.00474\n`#posts`                              -8.048e-05  3.120e-05  -2.579  0.01015\n`profile pic`:`nums/length username`   1.257e+00  1.284e-01   9.791  < 2e-16\n`fullname words`:`description length`  3.789e-04  2.467e-04   1.536  0.12503\n`name==username`:`external URL`       -2.155e-01  3.026e-01  -0.712  0.47670\n                                         \n(Intercept)                           ***\n`profile pic`                         ***\n`nums/length username`                   \n`fullname words`                      ** \n`description length`                  ** \n`name==username`                      ** \n`external URL`                        ** \n`#posts`                              *  \n`profile pic`:`nums/length username`  ***\n`fullname words`:`description length`    \n`name==username`:`external URL`          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2919 on 565 degrees of freedom\nMultiple R-squared:  0.6657,\tAdjusted R-squared:  0.6598 \nF-statistic: 112.5 on 10 and 565 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos <- datos %>%\n  mutate(log_description_length = log(`description length` + 1),\n        log_posts = log(`#posts`+1))\nmodelo_transformed <- lm(fake ~ `profile pic` * `nums/length username` +\n                                    log_description_length +\n                                    `name==username` +\n                                    log_posts, data = datos)\nsummary(modelo_transformed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ `profile pic` * `nums/length username` + \n    log_description_length + `name==username` + log_posts, data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.67329 -0.14460 -0.01357  0.07912  0.99380 \n\nCoefficients:\n                                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                           0.998668   0.033544  29.772  < 2e-16 ***\n`profile pic`                        -0.510429   0.045414 -11.239  < 2e-16 ***\n`nums/length username`                0.059602   0.091464   0.652   0.5149    \nlog_description_length               -0.039216   0.007451  -5.263 2.01e-07 ***\n`name==username`                      0.159217   0.062261   2.557   0.0108 *  \nlog_posts                            -0.068721   0.007599  -9.043  < 2e-16 ***\n`profile pic`:`nums/length username`  1.024658   0.120973   8.470  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2696 on 569 degrees of freedom\nMultiple R-squared:  0.7127,\tAdjusted R-squared:  0.7097 \nF-statistic: 235.3 on 6 and 569 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Guardar el modelo en un archivo\nsaveRDS(modelo_transformed, file = \"modelo_regresion.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos <- datos %>%\n  mutate(log_description_length = log(`description length` + 1),\n        log_posts = log(`#posts`+1))\nmodelo_transformed <- lm(fake ~ `profile pic` * `nums/length username` +\n                                    `description length` +\n                                    `name==username` +\n                                    log_posts, data = datos)\nsummary(modelo_transformed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = fake ~ `profile pic` * `nums/length username` + \n    `description length` + `name==username` + log_posts, data = datos)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.75362 -0.13681 -0.01568  0.07457  1.00317 \n\nCoefficients:\n                                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                           0.9931596  0.0341081  29.118   <2e-16 ***\n`profile pic`                        -0.5407160  0.0457082 -11.830   <2e-16 ***\n`nums/length username`                0.0738270  0.0929910   0.794   0.4276    \n`description length`                 -0.0009597  0.0003486  -2.753   0.0061 ** \n`name==username`                      0.1561247  0.0633349   2.465   0.0140 *  \nlog_posts                            -0.0753993  0.0076140  -9.903   <2e-16 ***\n`profile pic`:`nums/length username`  1.0555066  0.1230199   8.580   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2743 on 569 degrees of freedom\nMultiple R-squared:  0.7027,\tAdjusted R-squared:  0.6996 \nF-statistic: 224.1 on 6 and 569 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(modelo_transformed)\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-12-4.png){width=672}\n:::\n\n```{.r .cell-code}\n plot(density(resid(modelo_transformed))) #A density plot\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-12-5.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar las librerías necesarias\nlibrary(dplyr)\nlibrary(ggplot2)\ndatos_test <- datosTest %>%\n  mutate(log_description_length = log(`description length` + 1),\n        log_posts = log(`#posts`+1))\n\n# Generar predicciones\nmodelo1_predic <- predict(modelo_transformed, newdata = datos_test)\n\n\n\n# Añadir las predicciones al dataframe de prueba\ndatosTest <- datosTest %>% mutate(pred = modelo1_predic)\n\n\n# Graficar utilizando ggplot2\nggplot(datosTest, aes(x = pred, y = fake)) +\n  geom_point(color = \"red\") +              # Marcar los valores reales en rojo\n  geom_point(aes(x = pred, y = pred),      # Marcar los valores predichos en verde\n             color = \"green\", shape = 1) +\n  labs(title = \"Comparación de valores reales y predichos\",\n       x = \"Valores Predichos\",\n       y = \"Valores Reales\") +\n  theme_minimal()                         # Usar un tema minimalista\n```\n\n::: {.cell-output-display}\n![](regresion_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndatosTest <- datosTest %>% mutate(pred = ifelse(modelo1_predic < 0.5, 0, 1))\n# Calcular el porcentaje de aciertos\naccuracy <- mean(datosTest$pred == datosTest$fake) * 100\naccuracy\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 87.5\n```\n\n\n:::\n:::\n",
    "supporting": [
      "regresion_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}